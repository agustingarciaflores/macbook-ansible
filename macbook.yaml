- name: Set up MacBook
  connection: local
  hosts: localhost
  pre_tasks:
    - name: command | Get user account name
      command: id -un
      changed_when: false
      register: command__user

    - name: command | Get user full name
      command: id -F
      changed_when: false
      register: command__user_fullname

    - name: set_fact | Set username facts
      set_fact:
        user: "{{ command__user.stdout }}"
        user_fullname: "{{ command__user_fullname.stdout }}"

  tasks:
    - name: homebrew_cask | Upgrade casks
      tags:
        - packages
      community.general.homebrew_cask:
        update_homebrew: yes
        upgrade_all: yes

    - name: homebrew_cask | Install base casks
      tags:
        - packages
      community.general.homebrew_cask:
        name:
          - gas-mask
          - iterm2
          - lastpass
          - libreoffice

    - name: homebrew_cask | Install opinionated casks
      tags:
        - packages
        - opinionated
      community.general.homebrew_cask:
        name:
          - karabiner-elements
          - copyq
          - visual-studio-code
          - thunderbird
          - rectangle
          - keepassxc

    - name: homebrew | Install packages
      tags:
        - packages
      community.general.homebrew:
        name:
          - ghq
          - tmux
          - helm
          - kustomize
          - terraform
          - kubectx
          - k9s
          - helmfile
          - krew
          - diff-so-fancy
          - kubectl
          - mtr
          - htop
          - iperf3
          - docker
          - docker-compose
          - pwgen
          - ansible
          - httpie
          - jq
          - yq
          - pre-commit
          - awscli
          - tflint
          - tcpdump
          - wireshark

    - name: file | Create needed directories
      file:
        path: "{{ item.path }}"
        state: directory
      loop:
        - path: ~/.kube
        - path: ~/.kube/configs

    - name: file | Create opinionated directories
      tags:
        - opinionated
      file:
        path: "{{ item.path }}"
        state: directory
      loop:
        - path: ~/repos
        - path: ~/Library/Application Support/Code
        - path: ~/Library/Application Support/Code/User/
        - path: ~/Library/KeyBindings

    - name: get_url | Get Neo layout files
      tags:
        - opinionated
      get_url:
        url: "{{ item }}"
        dest: "~/Library/Keyboard Layouts"
      loop:
        - https://dl.neo-layout.org/neo.keylayout
        - https://dl.neo-layout.org/neo.icns

    - name: shell | Install oh-my-zsh
      tags:
        - opinionated
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        creates: "~/.oh-my-zsh"

    - name: git | Install git repo tools
      tags:
        - opinionated
      git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
        depth: "{{ item.depth|d(1) }}"
        force: "{{ item.force|d('yes') }}"
      loop:
        - repo: https://github.com/romkatv/powerlevel10k.git
          dest: ~/.oh-my-zsh/custom/themes/powerlevel10k

    - name: copy | Copy files
      tags:
        - opinionated
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner|d(user) }}"
        group: "{{ item.group|d('staff') }}"
        mode: "{{ item.mode|d('0440') }}"
      loop:
        - { src: dotfiles/gitignore, dest: "~/.gitignore" }
        - { src: dotfiles/zshrc, dest: "~/.zshrc" }
        - { src: dotfiles/tmux.conf, dest: "~/.tmux.conf" }
        - { src: dotfiles/p10k.zsh, dest: "~/.p10k.zsh" }
        - {
            src: vscode/keybindings.json,
            dest: "~/Library/Application Support/Code/User/keybindings.json",
            mode: "0660",
          }
        - {
            src: vscode/settings.json,
            dest: "~/Library/Application Support/Code/User/settings.json",
            mode: "0660",
          }
        - {
            src: DefaultKeyBinding.dict,
            dest: "~/Library/KeyBindings/DefaultKeyBinding.dict",
          }

    - name: template | Template files
      tags:
        - opinionated
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner|d(user) }}"
        group: "{{ item.group|d('staff') }}"
        mode: "{{ item.mode|d('0440') }}"
      loop:
        - { src: dotfiles/gitconfig, dest: "~/.gitconfig" }

    - name: shell | Get plain files
      tags:
        - opinionated
      shell: "curl -Lo {{ item.target }} {{ item.url }} && chmod {{ item.chmod|d('0755') }} {{ item.target }}"
      args:
        creates: "{{ item.target }}"
      loop:
        - {
            target: "~/.kubectl_aliases",
            chmod: "0444",
            # https://github.com/ahmetb/kubectl-aliases/blob/4440d32d636dc9aade0c5cbbf627e003f04cf939/.kubectl_aliases
            url: https://raw.githubusercontent.com/ahmetb/kubectl-aliases/4440d32d636dc9aade0c5cbbf627e003f04cf939/.kubectl_aliases,
          }

    - name: shell | Add krew repos
      shell: "kubectl krew index add {{ item.name }} {{ item.url }}"
      args:
        creates: "~/.krew/index/{{ item.name }}"
      loop:
        - { name: kvaps, url: https://github.com/kvaps/krew-index }
        - { name: default, url: https://github.com/kubernetes-sigs/krew-index }

    - name: shell | Install kubectl plugins
      shell: "kubectl krew install {{ item.receipt }}"
      args:
        creates: "~/.krew/receipts/{{ item.name }}.yaml"
      loop:
        - { name: node-shell, receipt: kvaps/node-shell }
        - { name: get-all, receipt: get-all }

    - name: shell | Install helm plugins
      shell: "helm plugin install {{ item.url }}{% if item.version|d(False) %} --version {{ item.version }}{% endif %}"
      args:
        creates: "~/Library/helm/plugins/{{ item.name }}"
      loop:
        - {
            name: helm-diff,
            url: https://github.com/databus23/helm-diff,
            version: v3.1.3,
          }
        - {
            name: helm-git,
            url: https://github.com/aslafy-z/helm-git,
            version: 0.10.0,
          }

    - name: pip | Install python packages
      pip:
        executable: /usr/local/opt/python3/bin/pip3
        name:
          - aws2-wrap

    - name: file | Create missing symlinks
      become: yes
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        - { src: /usr/local/Cellar/mtr/0.94/sbin/mtr, dest: /usr/local/bin/mtr }
        - { src: /usr/local/Cellar/mtr/0.94/sbin/mtr-packet, dest: /usr/local/bin/mtr-packet }

